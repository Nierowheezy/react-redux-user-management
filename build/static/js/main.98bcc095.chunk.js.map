{"version":3,"sources":["redux/actions/apiUrl.js","redux/constants/types.js","redux/actions/userActions.js","components/AddUser/index.js","components/EditUser/index.js","components/utils/Loader/Loader/Loader.js","components/utils/Modal/Modal.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["url","process","GET_ERRORS","ADD_USER","USER_LOADING","DELETE_USER","GET_USER","GET_USERS","UPDATE_USER","getUsers","dispatch","setUserLoading","axios","get","then","res","type","payload","data","catch","err","clearErrors","connect","state","users","addUser","userData","post","console","log","useState","name","setName","username","setUsername","email","setEmail","city","setCity","history","useHistory","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","user","toast","warning","length","error","id","address","success","push","htmlFor","placeholder","value","onChange","target","required","onClick","updateUser","updatedUser","put","status","response","useParams","currentUser","find","parseInt","useEffect","checkUserEmailExists","checkUserUsernameExists","checkUserCityExists","Loader","Modal","props","title","bodyText","action","userId","onDeleteClick","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","loading","deletUser","delete","setUserId","sortType","setSortType","sortedUsers","sort","a","b","localeCompare","style","fontSize","to","scope","map","data-toggle","data-target","SkeletonUsers","Navbar","App","exact","path","component","initialState","userReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.98bcc095.chunk.js","sourcesContent":["export const url = process.env.REACT_APP_API_URL;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\n\r\nexport const LOADING = \"LOADING\";\r\n\r\nexport const ADD_USER = \"ADD_USER\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const DELETE_USER = \"DELETE_USER\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\n","import axios from \"axios\";\r\nimport { url } from \"./apiUrl\";\r\nimport {\r\n  ADD_USER,\r\n  USER_LOADING,\r\n  CLEAR_ERRORS,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  GET_USERS,\r\n  GET_ERRORS,\r\n  UPDATE_USER,\r\n} from \"../constants/types\";\r\n\r\n// Add User\r\nexport const addUser = (userData) => (dispatch) => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .post(url, userData)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: ADD_USER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch(\r\n      (err) => console.log(err)\r\n      // dispatch({\r\n      //   type: GET_ERRORS,\r\n      //   payload: err.response.data,\r\n      // })\r\n    );\r\n};\r\n\r\n// Update User\r\nexport const updateUser = (id, updatedUser) => (dispatch) => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .put(`${url}/${id}`, updatedUser)\r\n    .then((res) => {\r\n      if (res.status === 200) {\r\n        dispatch(getUsers());\r\n      }\r\n      dispatch({\r\n        type: UPDATE_USER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Get Users\r\nexport const getUsers = () => (dispatch) => {\r\n  dispatch(setUserLoading());\r\n  axios\r\n    .get(url)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_USERS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_USERS,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Get User\r\nexport const getUser = (id) => (dispatch) => {\r\n  dispatch(setUserLoading());\r\n  axios\r\n    .get(`${url}/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: null,\r\n      })\r\n    );\r\n};\r\n\r\n// Delete User\r\nexport const deletUser = (id) => (dispatch) => {\r\n  axios\r\n    .delete(`${url}/${id}`)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: DELETE_USER,\r\n        payload: id,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n// Set loading state\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING,\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { addUser } from \"../../redux/actions/userActions\";\r\n\r\nconst AddUser = ({ users, addUser }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = users.filter((user) =>\r\n      user.email === email ? user : null\r\n    );\r\n\r\n    if (!email || !name || !username || !city) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: users.length > 0 ? users[users.length - 1].id + 1 : 0,\r\n      email,\r\n      username,\r\n      name,\r\n      address: {\r\n        city: city,\r\n      },\r\n    };\r\n\r\n    addUser(data);\r\n    toast.success(\"User added successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // const handleCancel = () => {\r\n  //   if (window.confirm(`you will be redirected to the home page continue?`)) {\r\n  //     history.push(\"/\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      {/* <button\r\n        className=\"btn btn-dark ml-auto my-5\"\r\n        onClick={() => history.push(\"/\")}\r\n      >\r\n        Go back\r\n      </button> */}\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header text-center bg-dark text-white\">\r\n          Dashboard\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 className=\"p-4\">Dashboard</h1>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Form</div>\r\n            <div className=\"card-body\">\r\n              <div className=\"col-md-12 mx-auto p-5\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                      Name\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Full name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                      Username\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                      Email\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group row\">\r\n                    <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                      City\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"City\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"form-group d-flex justify-content-end my-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger mr-4\"\r\n                      onClick={() => history.push(\"/\")}\r\n                    >\r\n                      cancel\r\n                    </button>\r\n                    <button type=\"submit\" className=\"btn btn-success\">\r\n                      submit\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addUser })(AddUser);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\nimport { updateUser } from \"../../redux/actions/userActions\";\r\n\r\nconst EditUser = ({ users, updateUser }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const currentUser = users.find((user) => user.id === parseInt(id));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setUsername(currentUser.username);\r\n    setEmail(currentUser.email);\r\n    setCity(currentUser.address?.city);\r\n  }, [currentUser]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkUserEmailExists = users.filter((user) =>\r\n      user.email === email && user.id !== currentUser.id ? user : null\r\n    );\r\n\r\n    const checkUserUsernameExists = users.filter((user) =>\r\n      user.username === username && user.id !== currentUser.id ? user : null\r\n    );\r\n\r\n    const checkUserCityExists = users.filter((user) =>\r\n      user.city === city && user.id !== currentUser.id ? user : null\r\n    );\r\n\r\n    if (email === \"\" || username === \"\" || name === \"\" || city === \"\") {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n\r\n    if (checkUserUsernameExists.length > 0) {\r\n      return toast.error(\"This username already exists!!\");\r\n    }\r\n    if (checkUserEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkUserCityExists.length > 0) {\r\n      return toast.error(\"This city already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: currentUser.id,\r\n      name,\r\n      username,\r\n      email,\r\n      city,\r\n    };\r\n\r\n    console.log(data);\r\n\r\n    updateUser(data);\r\n    toast.success(\"User updated successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      {/* <button\r\n          className=\"btn btn-dark ml-auto my-5\"\r\n          onClick={() => history.push(\"/\")}\r\n        >\r\n          Go back\r\n        </button> */}\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-header text-center bg-dark text-white\">\r\n          Dashboard\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <h1 className=\"p-4\">Dashboard</h1>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">Form</div>\r\n            <div className=\"card-body\">\r\n              <div className=\"col-md-12 mx-auto p-5\">\r\n                {currentUser ? (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group row\">\r\n                      <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        Name\r\n                      </label>\r\n                      <div className=\"col-sm-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={name}\r\n                          placeholder={\"Name\"}\r\n                          onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                      <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        Username\r\n                      </label>\r\n                      <div className=\"col-sm-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={username}\r\n                          placeholder={\"Username\"}\r\n                          onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                      <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        Email\r\n                      </label>\r\n                      <div className=\"col-sm-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={email}\r\n                          placeholder={\"Email\"}\r\n                          onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group row\">\r\n                      <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\r\n                        City\r\n                      </label>\r\n                      <div className=\"col-sm-10\">\r\n                        <input\r\n                          className=\"form-control\"\r\n                          value={city}\r\n                          placeholder={\"City\"}\r\n                          onChange={(e) => setCity(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group d-flex justify-content-end my-2\">\r\n                      <button type=\"submit\" className=\"btn btn-success\">\r\n                        Update User\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-outline-danger ml-4\"\r\n                        onClick={() => history.push(\"/\")}\r\n                      >\r\n                        cancel\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                ) : (\r\n                  <h1 className=\"text-center\">No User Found</h1>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users.users,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUser })(EditUser);\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div\r\n      className=\"lds-ripple\"\r\n      // style={{ width: \"100px\", margin: \"0 auto\", display: \"block\" }}\r\n    >\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nconst Modal = (props) => {\r\n  const { title, bodyText, action, userId, onDeleteClick } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModalCenter\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalCenterTitle\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">\r\n                {title}\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">{bodyText}</div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => onDeleteClick(userId)}\r\n              >\r\n                {action}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUsers, deletUser } from \"../../redux/actions/userActions\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport Loader from \"../utils/Loader/Loader/Loader\";\r\nimport Modal from \"../utils/Modal/Modal\";\r\n\r\nconst Home = (props) => {\r\n  const { users, getUsers, deletUser, loading } = props;\r\n\r\n  const [userId, setUserId] = useState(null);\r\n  const [sortType, setSortType] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  const onDeleteClick = (id) => {\r\n    deletUser(id);\r\n  };\r\n\r\n  const sortedUsers = users.sort((a, b) => {\r\n    const isReversed = sortType === \"asc\" ? 1 : -1;\r\n    return isReversed * a.username.localeCompare(b.name);\r\n  });\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex\">\r\n        <div className=\"col-md-12 mx-auto my-4\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header bg-dark text-white  d-flex flex-row  align-items-center justify-content-between p-0 m-0\">\r\n              <span className=\"ml-4\" style={{ fontSize: \"2rem\" }}>\r\n                <BsThreeDots />\r\n              </span>\r\n              <p className=\"mt-3\">Dashboard</p>\r\n              <p></p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h1>Dashboard</h1>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setSortType(!sortType)}\r\n                className=\"btn btn-primary mb-4\"\r\n              >\r\n                Sort By Username\r\n              </button>\r\n              <Modal\r\n                title={\"Delete\"}\r\n                bodyText={\"Do you want to delete this user\"}\r\n                action={\"Delete\"}\r\n                onDeleteClick={onDeleteClick}\r\n                userId={userId}\r\n              />\r\n              <div className=\"card text-center\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"d-flex flex-row justify-content-between\">\r\n                    <p>User list</p>\r\n                    <Link to=\"/add\" className=\"btn btn-primary\">\r\n                      Add new\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {users?.length > 0 ? (\r\n                    <div className=\"table-responsive\">\r\n                      <table className=\"table table-hover\">\r\n                        <thead className=\"table-header\">\r\n                          <tr>\r\n                            <th scope=\"col\">Id</th>\r\n                            <th scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Username</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">City</th>\r\n                            <th scope=\"col\"></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {users?.length > 0 ? (\r\n                            sortedUsers?.map((user, id) => (\r\n                              <tr key={id}>\r\n                                <td>{id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.address?.city}</td>\r\n                                <td>\r\n                                  <Link\r\n                                    to={`/edit/${user.id}`}\r\n                                    className=\"btn btn-sm btn-warning mr-1\"\r\n                                  >\r\n                                    Edit\r\n                                  </Link>\r\n\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => setUserId(user.id)}\r\n                                    className=\"btn btn-sm btn-danger\"\r\n                                    data-toggle=\"modal\"\r\n                                    data-target=\"#exampleModalCenter\"\r\n                                  >\r\n                                    Delete\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                          ) : (\r\n                            <tr>{!users && <SkeletonUsers />}</tr>\r\n                          )}\r\n                        </tbody>\r\n                      </table>\r\n                      {/* <div class=\"d-flex justify-content-center\">\r\n                        <nav aria-label=\"Page navigation\">\r\n                          <ul class=\"pagination\">\r\n                            <li class=\"page-item\">\r\n                              <a class=\"page-link\" href=\"#\">\r\n                                Previous\r\n                              </a>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                              <a class=\"page-link\" href=\"#\">\r\n                                1\r\n                              </a>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                              <a class=\"page-link\" href=\"#\">\r\n                                2\r\n                              </a>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                              <a class=\"page-link\" href=\"#\">\r\n                                3\r\n                              </a>\r\n                            </li>\r\n                            <li class=\"page-item\">\r\n                              <a class=\"page-link\" href=\"#\">\r\n                                Next\r\n                              </a>\r\n                            </li>\r\n                          </ul>\r\n                        </nav>\r\n                      </div> */}\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <p>\r\n                        Oops! No users users found, add a new user thanks 😢\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users.users,\r\n  loading: state.users.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUsers, deletUser })(Home);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"col-md-12 bg-dark py-2\">\r\n      <nav className=\"navbar bg-dark navbar-dark text-center\">\r\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\r\n          Dashboard\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AddUser from \"./components/AddUser\";\r\nimport EditUser from \"./components/EditUser\";\r\nimport Home from \"./components/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport \"./styles.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer />\r\n      <Navbar />\r\n      <Route exact path=\"/\" component={() => <Home />} />\r\n      <Route exact path=\"/add\" component={() => <AddUser />} />\r\n      <Route exact path=\"/edit/:id\" component={() => <EditUser />} />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import {\r\n  ADD_USER,\r\n  USER_LOADING,\r\n  DELETE_USER,\r\n  GET_USER,\r\n  GET_USERS,\r\n  UPDATE_USER,\r\n} from \"../constants/types\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  user: {},\r\n  loading: false,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: [...state.user, action.payload],\r\n      };\r\n    case ADD_USER:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nexport default combineReducers({\r\n  users: userReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport store from \"./redux/store/store\";\r\n\r\n// import { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n// import { contactReducer } from \"./redux/reducers/contactReducer\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// const store = createStore(contactReducer, composeWithDevTools());\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}